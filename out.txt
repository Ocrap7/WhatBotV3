[
  {
    name: 'arielk',
    files: [ 'ArielK.mp3', 'ArielK1.mp3', 'ArielK2.mp3', 'ArielK3.mp3' ]
  },
  { name: 'ariell', files: [ 'ArielL.mp3' ] },
  { name: 'dom', files: [ 'Dom.mp3', 'Dom2.mp3' ] },
  { name: 'graydon', files: [ 'Graydon.mp3' ] },
  { name: 'lukas', files: [ 'Lukas.mp3' ] },
  { name: 'oliver', files: [ 'Oliver.mp3' ] },
  { name: 'owen', files: [ 'Owen.mp3' ] },
  { name: 'curvemusic', files: [ 'curveMusic.mp3' ] },
  { name: 'd-join', files: [ 'd-join.mp3' ] },
  { name: 'd-leave', files: [ 'd-leave.mp3' ] },
  { name: 'excuseme', files: [ 'excuseMe.mp3' ] },
  { name: 'potato', files: [ 'potato.mp3' ] }
]
Bot Ready
Started refreshing application (/) commands.
Successfully reloaded application (/) commands.
Playing undefined
Map(0) {}
<ref *1> Song {
  data: undefined,
  player: Player {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    queues: Collection(1) [Map] { '705288984800133141' => [Queue] },
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    client: Client {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      options: [Object],
      rest: [RESTManager],
      _cleanups: [Set],
      _finalizers: FinalizationRegistry {},
      ws: [WebSocketManager],
      actions: [ActionsManager],
      voice: [ClientVoiceManager],
      shard: null,
      users: UserManager {},
      guilds: GuildManager {},
      channels: ChannelManager {},
      sweepers: [Sweepers],
      presence: [ClientPresence],
      user: [ClientUser],
      application: [ClientApplication],
      readyAt: 2022-01-14T03:42:22.126Z,
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  queue: Queue {
    songs: [ [Circular *1] ],
    isPlaying: false,
    data: undefined,
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    repeatMode: 0,
    destroyed: false,
    player: Player {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      queues: [Collection [Map]],
      options: [Object],
      client: [Client],
      [Symbol(kCapture)]: false
    },
    guild: Guild {
      id: '705288984800133141',
      name: '"The Perfect Drizzle"',
      icon: 'cf0673dbb15d71e35bb3c2acdc426d3d',
      features: [],
      commands: [GuildApplicationCommandManager],
      members: [GuildMemberManager],
      channels: [GuildChannelManager],
      bans: [GuildBanManager],
      roles: [RoleManager],
      presences: PresenceManager {},
      voiceStates: [VoiceStateManager],
      stageInstances: [StageInstanceManager],
      invites: [GuildInviteManager],
      scheduledEvents: [GuildScheduledEventManager],
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 'NONE',
      vanityURLCode: null,
      nsfwLevel: 'DEFAULT',
      discoverySplash: null,
      memberCount: 33,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: null,
      premiumTier: 'NONE',
      premiumSubscriptionCount: 0,
      explicitContentFilter: 'DISABLED',
      mfaLevel: 'NONE',
      joinedTimestamp: 1588957201315,
      defaultMessageNotifications: 'ALL_MESSAGES',
      systemChannelFlags: [SystemChannelFlags],
      maximumMembers: 250000,
      maximumPresences: null,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '614607997057892372',
      emojis: [GuildEmojiManager],
      stickers: [GuildStickerManager]
    },
    connection: StreamConnection {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      paused: false,
      readyLock: false,
      connection: [VoiceConnection],
      player: [AudioPlayer],
      channel: [VoiceChannel],
      resource: [AudioResource],
      [Symbol(kCapture)]: false
    }
  },
  name: 'Tom Ching Cheng Hanji, but 4K 60fps',
  author: 'Maxises',
  url: 'https://www.youtube.com/watch?v=qGk4E9ss95s',
  thumbnail: 'https://i.ytimg.com/vi/qGk4E9ss95s/hq720.jpg?sqp=-oaymwEXCNAFEJQDSFryq4qpAwkIARUAAIhCGAE=&rs=AOn4CLD5oJIYb-ptdpR0whHgpSACh1wFoQ',
  requestedBy: undefined,
  duration: '10:05',
  isLive: false,
  isFirst: true,
  seekTime: 0
}
Playing undefined
Playing undefined
Playing undefined
Playing undefined
[
  {
    name: 'arielk',
    files: [ 'ArielK.mp3', 'ArielK1.mp3', 'ArielK2.mp3', 'ArielK3.mp3' ]
  },
  { name: 'ariell', files: [ 'ArielL.mp3' ] },
  { name: 'dom', files: [ 'Dom.mp3', 'Dom2.mp3' ] },
  { name: 'graydon', files: [ 'Graydon.mp3' ] },
  { name: 'lukas', files: [ 'Lukas.mp3' ] },
  { name: 'oliver', files: [ 'Oliver.mp3' ] },
  { name: 'owen', files: [ 'Owen.mp3' ] },
  { name: 'curvemusic', files: [ 'curveMusic.mp3' ] },
  { name: 'd-join', files: [ 'd-join.mp3' ] },
  { name: 'd-leave', files: [ 'd-leave.mp3' ] },
  { name: 'excuseme', files: [ 'excuseMe.mp3' ] },
  { name: 'potato', files: [ 'potato.mp3' ] }
]
Bot Ready
Started refreshing application (/) commands.
Successfully reloaded application (/) commands.
Playing undefined
Map(0) {}
<ref *1> Song {
  data: undefined,
  player: Player {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    queues: Collection(1) [Map] { '705288984800133141' => [Queue] },
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    client: Client {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      options: [Object],
      rest: [RESTManager],
      _cleanups: [Set],
      _finalizers: FinalizationRegistry {},
      ws: [WebSocketManager],
      actions: [ActionsManager],
      voice: [ClientVoiceManager],
      shard: null,
      users: UserManager {},
      guilds: GuildManager {},
      channels: ChannelManager {},
      sweepers: [Sweepers],
      presence: [ClientPresence],
      user: [ClientUser],
      application: [ClientApplication],
      readyAt: 2022-01-14T03:43:50.545Z,
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  queue: Queue {
    songs: [ [Circular *1] ],
    isPlaying: false,
    data: undefined,
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    repeatMode: 0,
    destroyed: false,
    player: Player {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      queues: [Collection [Map]],
      options: [Object],
      client: [Client],
      [Symbol(kCapture)]: false
    },
    guild: Guild {
      id: '705288984800133141',
      name: '"The Perfect Drizzle"',
      icon: 'cf0673dbb15d71e35bb3c2acdc426d3d',
      features: [],
      commands: [GuildApplicationCommandManager],
      members: [GuildMemberManager],
      channels: [GuildChannelManager],
      bans: [GuildBanManager],
      roles: [RoleManager],
      presences: PresenceManager {},
      voiceStates: [VoiceStateManager],
      stageInstances: [StageInstanceManager],
      invites: [GuildInviteManager],
      scheduledEvents: [GuildScheduledEventManager],
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 'NONE',
      vanityURLCode: null,
      nsfwLevel: 'DEFAULT',
      discoverySplash: null,
      memberCount: 33,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: null,
      premiumTier: 'NONE',
      premiumSubscriptionCount: 0,
      explicitContentFilter: 'DISABLED',
      mfaLevel: 'NONE',
      joinedTimestamp: 1588957201315,
      defaultMessageNotifications: 'ALL_MESSAGES',
      systemChannelFlags: [SystemChannelFlags],
      maximumMembers: 250000,
      maximumPresences: null,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '614607997057892372',
      emojis: [GuildEmojiManager],
      stickers: [GuildStickerManager]
    },
    connection: StreamConnection {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      paused: false,
      readyLock: false,
      connection: [VoiceConnection],
      player: [AudioPlayer],
      channel: [VoiceChannel],
      resource: [AudioResource],
      [Symbol(kCapture)]: false
    }
  },
  name: 'Tom Ching Cheng Hanji, but 4K 60fps',
  author: 'Maxises',
  url: 'https://www.youtube.com/watch?v=qGk4E9ss95s',
  thumbnail: 'https://i.ytimg.com/vi/qGk4E9ss95s/hq720.jpg?sqp=-oaymwEXCNAFEJQDSFryq4qpAwkIARUAAIhCGAE=&rs=AOn4CLD5oJIYb-ptdpR0whHgpSACh1wFoQ',
  requestedBy: undefined,
  duration: '10:05',
  isLive: false,
  isFirst: true,
  seekTime: 0
}
Playing undefined
Map(1) {
  '705288984800133141' => {
    onVoiceServerUpdate: [Function: onVoiceServerUpdate],
    onVoiceStateUpdate: [Function: onVoiceStateUpdate],
    destroy: [Function: destroy]
  }
}
<ref *1> Song {
  data: undefined,
  player: Player {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    queues: Collection(1) [Map] { '705288984800133141' => [Queue] },
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    client: Client {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      options: [Object],
      rest: [RESTManager],
      _cleanups: [Set],
      _finalizers: FinalizationRegistry {},
      ws: [WebSocketManager],
      actions: [ActionsManager],
      voice: [ClientVoiceManager],
      shard: null,
      users: UserManager {},
      guilds: GuildManager {},
      channels: ChannelManager {},
      sweepers: [Sweepers],
      presence: [ClientPresence],
      user: [ClientUser],
      application: [ClientApplication],
      readyAt: 2022-01-14T03:43:50.545Z,
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  queue: Queue {
    songs: [ [Song], [Circular *1] ],
    isPlaying: true,
    data: undefined,
    options: {
      leaveOnEnd: true,
      leaveOnStop: true,
      leaveOnEmpty: true,
      deafenOnJoin: false,
      timeout: 0,
      volume: 100,
      quality: 'high'
    },
    repeatMode: 0,
    destroyed: false,
    player: Player {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      queues: [Collection [Map]],
      options: [Object],
      client: [Client],
      [Symbol(kCapture)]: false
    },
    guild: Guild {
      id: '705288984800133141',
      name: '"The Perfect Drizzle"',
      icon: 'cf0673dbb15d71e35bb3c2acdc426d3d',
      features: [],
      commands: [GuildApplicationCommandManager],
      members: [GuildMemberManager],
      channels: [GuildChannelManager],
      bans: [GuildBanManager],
      roles: [RoleManager],
      presences: PresenceManager {},
      voiceStates: [VoiceStateManager],
      stageInstances: [StageInstanceManager],
      invites: [GuildInviteManager],
      scheduledEvents: [GuildScheduledEventManager],
      available: true,
      shardId: 0,
      splash: null,
      banner: null,
      description: null,
      verificationLevel: 'NONE',
      vanityURLCode: null,
      nsfwLevel: 'DEFAULT',
      discoverySplash: null,
      memberCount: 33,
      large: false,
      premiumProgressBarEnabled: false,
      applicationId: null,
      afkTimeout: 300,
      afkChannelId: null,
      systemChannelId: null,
      premiumTier: 'NONE',
      premiumSubscriptionCount: 0,
      explicitContentFilter: 'DISABLED',
      mfaLevel: 'NONE',
      joinedTimestamp: 1588957201315,
      defaultMessageNotifications: 'ALL_MESSAGES',
      systemChannelFlags: [SystemChannelFlags],
      maximumMembers: 250000,
      maximumPresences: null,
      approximateMemberCount: null,
      approximatePresenceCount: null,
      vanityURLUses: null,
      rulesChannelId: null,
      publicUpdatesChannelId: null,
      preferredLocale: 'en-US',
      ownerId: '614607997057892372',
      emojis: [GuildEmojiManager],
      stickers: [GuildStickerManager]
    },
    connection: StreamConnection {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      paused: false,
      readyLock: false,
      connection: [VoiceConnection],
      player: [AudioPlayer],
      channel: [VoiceChannel],
      resource: [AudioResource],
      [Symbol(kCapture)]: false
    }
  },
  name: 'ching cheng hanji grandpa',
  author: 'alienzoom',
  url: 'https://www.youtube.com/watch?v=SgElk1-nHxI',
  thumbnail: 'https://i.ytimg.com/vi/SgElk1-nHxI/hqdefault.jpg?sqp=-oaymwEjCOADEI4CSFryq4qpAxUIARUAAAAAGAElAADIQj0AgKJDeAE=&rs=AOn4CLDNAWtD5NGZ54ZQFjAXUKDVjB8Mkg',
  requestedBy: undefined,
  duration: '0:22',
  isLive: false,
  isFirst: false,
  seekTime: 0
}
Playing { name: 'graydon', files: [ 'Graydon.mp3' ] }
file Graydon.mp3
adui <ref *1> j {
  playStream: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  edges: [
    {
      type: 'ffmpeg pcm',
      to: [Ue],
      cost: 2,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'volume transformer',
      to: [Ue],
      cost: 0.5,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'opus encoder',
      to: [Ue],
      cost: 1.5,
      transformer: [Function: transformer],
      from: [Ue]
    }
  ],
  metadata: null,
  volume: VolumeTransformer {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [Array],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: true,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      data: [Function: ondata]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _readInt: [Function (anonymous)],
    _writeInt: [Function (anonymous)],
    _bits: 16,
    _bytes: 2,
    _extremum: 32768,
    volume: 0.3,
    _chunk: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  encoder: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  audioPlayer: H {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _state: {
      status: 'buffering',
      resource: [Circular *1],
      onReadableCallback: [Function: s],
      onFailureCallback: [Function: n],
      onStreamError: [Function: t]
    },
    subscribers: [ [W] ],
    behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
    debug: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  playbackDuration: 0,
  started: false,
  silencePaddingFrames: 5,
  silenceRemaining: -1
}
Playing { name: 'graydon', files: [ 'Graydon.mp3' ] }
file Graydon.mp3
adui <ref *1> j {
  playStream: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  edges: [
    {
      type: 'ffmpeg pcm',
      to: [Ue],
      cost: 2,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'volume transformer',
      to: [Ue],
      cost: 0.5,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'opus encoder',
      to: [Ue],
      cost: 1.5,
      transformer: [Function: transformer],
      from: [Ue]
    }
  ],
  metadata: null,
  volume: VolumeTransformer {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [Array],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: true,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      data: [Function: ondata]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _readInt: [Function (anonymous)],
    _writeInt: [Function (anonymous)],
    _bits: 16,
    _bytes: 2,
    _extremum: 32768,
    volume: 0.3,
    _chunk: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  encoder: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  audioPlayer: H {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _state: {
      status: 'buffering',
      resource: [Circular *1],
      onReadableCallback: [Function: s],
      onFailureCallback: [Function: n],
      onStreamError: [Function: t]
    },
    subscribers: [ [W] ],
    behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
    debug: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  playbackDuration: 0,
  started: false,
  silencePaddingFrames: 5,
  silenceRemaining: -1
}
Playing undefined
Playing { name: 'graydon', files: [ 'Graydon.mp3' ] }
file Graydon.mp3
adui <ref *1> j {
  playStream: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  edges: [
    {
      type: 'ffmpeg pcm',
      to: [Ue],
      cost: 2,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'volume transformer',
      to: [Ue],
      cost: 0.5,
      transformer: [Function: transformer],
      from: [Ue]
    },
    {
      type: 'opus encoder',
      to: [Ue],
      cost: 1.5,
      transformer: [Function: transformer],
      from: [Ue]
    }
  ],
  metadata: null,
  volume: VolumeTransformer {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [Array],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: true,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      data: [Function: ondata]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    _readInt: [Function (anonymous)],
    _writeInt: [Function (anonymous)],
    _bits: 16,
    _bytes: 2,
    _extremum: 32768,
    volume: 0.3,
    _chunk: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  encoder: Encoder {
    _readableState: ReadableState {
      objectMode: true,
      highWaterMark: 16,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: false,
      ended: false,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: true,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      prefinish: [Function: prefinish],
      close: [Array],
      end: [Array],
      finish: [Array],
      error: [Array],
      unpipe: [Function: onunpipe],
      readable: [Array]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: true,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
    encoder: OpusEncoder {},
    _options: { rate: 48000, channels: 2, frameSize: 960 },
    _required: 3840,
    _buffer: <Buffer >,
    [Symbol(kCapture)]: false,
    [Symbol(kCallback)]: null
  },
  audioPlayer: H {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _state: {
      status: 'buffering',
      resource: [Circular *1],
      onReadableCallback: [Function: s],
      onFailureCallback: [Function: n],
      onStreamError: [Function: t]
    },
    subscribers: [ [W] ],
    behaviors: { noSubscriber: 'pause', maxMissedFrames: 5 },
    debug: [Function (anonymous)],
    [Symbol(kCapture)]: false
  },
  playbackDuration: 0,
  started: false,
  silencePaddingFrames: 5,
  silenceRemaining: -1
}
Playing undefined
Map(0) {}
NoVoiceConnection: There is no Queue#connection [you should use Queue#join()] first.
    at Queue.<anonymous> (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:181:23)
    at Generator.next (<anonymous>)
    at /Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:4:12)
    at Queue.play (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:177:16)
    at Object.onExecute (/Users/oliverclarke/Documents/WhatBotV3/src/commands/stereo.ts:114:46)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
undefined
Playing undefined
DMPError [VoiceConnectionError]: There was an Error while starting the Voice Stream
    at Queue.<anonymous> (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:117:23)
    at Generator.throw (<anonymous>)
    at rejected (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:6:65)
Playing undefined
Map(0) {}
NoVoiceConnection: There is no Queue#connection [you should use Queue#join()] first.
    at Queue.<anonymous> (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:181:23)
    at Generator.next (<anonymous>)
    at /Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:4:12)
    at Queue.play (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:177:16)
    at Object.onExecute (/Users/oliverclarke/Documents/WhatBotV3/src/commands/stereo.ts:114:46)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
undefined
Playing undefined
Playing undefined
Playing undefined
Playing undefined
Map(1) {
  '705288984800133141' => {
    onVoiceServerUpdate: [Function: onVoiceServerUpdate],
    onVoiceStateUpdate: [Function: onVoiceStateUpdate],
    destroy: [Function: destroy]
  }
}
NoVoiceConnection: There is no Queue#connection [you should use Queue#join()] first.
    at Queue.<anonymous> (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:181:23)
    at Generator.next (<anonymous>)
    at /Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:4:12)
    at Queue.play (/Users/oliverclarke/Documents/WhatBotV3/node_modules/discord-music-player/dist/managers/Queue.js:177:16)
    at Object.onExecute (/Users/oliverclarke/Documents/WhatBotV3/src/commands/stereo.ts:114:46)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
undefined
Playing undefined
